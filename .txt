def download_unsplash_photos(client_id, save_dir, num_photos):
    """
    Downloads random stock photos from Unsplash API.
    
    Args:
        client_id (str): Your Unsplash API client ID
        save_dir (str): Directory where photos will be saved
        num_photos (int): Total number of photos to download
    
    Returns:
        list: Paths to downloaded photos
    """
    # Create directory if it doesn't exist
    os.makedirs(save_dir, exist_ok=True)

    # Setup API parameters
    url = "https://api.unsplash.com/photos/random"
    headers = {
        "Authorization": f"Client-ID {client_id}",
        "Accept-Version": "v1"
    }
    
    downloaded_paths = []
    photos_to_download = num_photos

    # Download photos in batches since API limits to 30 per request
    while photos_to_download > 0:
        try:
            # Calculate batch size for this iteration
            batch_size = min(30, photos_to_download)
            
            params = {
                "count": batch_size,
                "query": "stock photo",
                "orientation": "landscape"  # Consistent image orientation
            }
            # Make API request with error handling
            response = requests.get(url, headers=headers, params=params)
            response.raise_for_status()  # Raise exception for bad status codes
            photos = response.json()
            
            # Download each photo in the batch
            for photo in tqdm(photos, desc="Downloading photos"):
                try:
                    img_url = photo['urls']['regular']
                    img_response = requests.get(img_url)
                    img_response.raise_for_status()
                    
                    img_name = os.path.join(save_dir, f"{photo['id']}.jpg")
                    with open(img_name, 'wb') as f:
                        f.write(img_response.content)
                    
                    downloaded_paths.append(img_name)

                except (KeyError, requests.RequestException) as e:
                    print(f"Error downloading photo: {str(e)}")
                    continue
            
            photos_to_download -= len(photos)
            
            # Respect Unsplash API rate limits
            time.sleep(1)
            
        except requests.RequestException as e:
            print(f"Error making API request: {str(e)}")
            break
    
    print(f"Successfully downloaded {len(downloaded_paths)} photos")
    return downloaded_paths